// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: domain/unit.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 微服务单元化服务类型
type ServiceUnitType int32

const (
	// 0 is reserved for errors
	ServiceUnitType_UNIT_UNKNOWN ServiceUnitType = 0
	// 本单元优先
	ServiceUnitType_UNIT_LOCAL ServiceUnitType = 1
	// 单元
	ServiceUnitType_UNIT_COMMON ServiceUnitType = 2
	// 中心
	ServiceUnitType_UNIT_CENTER ServiceUnitType = 3
)

// Enum value maps for ServiceUnitType.
var (
	ServiceUnitType_name = map[int32]string{
		0: "UNIT_UNKNOWN",
		1: "UNIT_LOCAL",
		2: "UNIT_COMMON",
		3: "UNIT_CENTER",
	}
	ServiceUnitType_value = map[string]int32{
		"UNIT_UNKNOWN": 0,
		"UNIT_LOCAL":   1,
		"UNIT_COMMON":  2,
		"UNIT_CENTER":  3,
	}
)

func (x ServiceUnitType) Enum() *ServiceUnitType {
	p := new(ServiceUnitType)
	*p = x
	return p
}

func (x ServiceUnitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceUnitType) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_unit_proto_enumTypes[0].Descriptor()
}

func (ServiceUnitType) Type() protoreflect.EnumType {
	return &file_domain_unit_proto_enumTypes[0]
}

func (x ServiceUnitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceUnitType.Descriptor instead.
func (ServiceUnitType) EnumDescriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{0}
}

// 访问方式
type AccessMode int32

const (
	AccessMode_None      AccessMode = 0
	AccessMode_Read      AccessMode = 1
	AccessMode_ReadWrite AccessMode = 2
)

// Enum value maps for AccessMode.
var (
	AccessMode_name = map[int32]string{
		0: "None",
		1: "Read",
		2: "ReadWrite",
	}
	AccessMode_value = map[string]int32{
		"None":      0,
		"Read":      1,
		"ReadWrite": 2,
	}
)

func (x AccessMode) Enum() *AccessMode {
	p := new(AccessMode)
	*p = x
	return p
}

func (x AccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_domain_unit_proto_enumTypes[1].Descriptor()
}

func (AccessMode) Type() protoreflect.EnumType {
	return &file_domain_unit_proto_enumTypes[1]
}

func (x AccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessMode.Descriptor instead.
func (AccessMode) EnumDescriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{1}
}

// 微服务单元化处理策略配置
type ServiceUnitStrategyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ServiceUnitStrategyConfig) Reset() {
	*x = ServiceUnitStrategyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceUnitStrategyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceUnitStrategyConfig) ProtoMessage() {}

func (x *ServiceUnitStrategyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceUnitStrategyConfig.ProtoReflect.Descriptor instead.
func (*ServiceUnitStrategyConfig) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceUnitStrategyConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// 微服务单元化策略配置
type ServiceUnitRuleStrategyConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 最小实例数
	ProviderMinNum int32 `protobuf:"varint,1,opt,name=providerMinNum,proto3" json:"providerMinNum,omitempty"`
	// 小于最小实例数的处理策略
	FallbackStrategy *ServiceUnitStrategyConfig `protobuf:"bytes,2,opt,name=fallbackStrategy,proto3" json:"fallbackStrategy,omitempty"`
	// 单元变量丢失处理策略（暂不使用）
	VariableMissStrategy *ServiceUnitStrategyConfig `protobuf:"bytes,3,opt,name=variableMissStrategy,proto3" json:"variableMissStrategy,omitempty"`
	// 逃逸流量处理策略(reject, toCenter)
	EscapeTrafficStrategy *ServiceUnitStrategyConfig `protobuf:"bytes,4,opt,name=escapeTrafficStrategy,proto3" json:"escapeTrafficStrategy,omitempty"`
	// 跟踪插件用的哪一个
	TracingStrategy *ServiceUnitStrategyConfig `protobuf:"bytes,5,opt,name=tracingStrategy,proto3" json:"tracingStrategy,omitempty"`
}

func (x *ServiceUnitRuleStrategyConfig) Reset() {
	*x = ServiceUnitRuleStrategyConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceUnitRuleStrategyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceUnitRuleStrategyConfig) ProtoMessage() {}

func (x *ServiceUnitRuleStrategyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceUnitRuleStrategyConfig.ProtoReflect.Descriptor instead.
func (*ServiceUnitRuleStrategyConfig) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceUnitRuleStrategyConfig) GetProviderMinNum() int32 {
	if x != nil {
		return x.ProviderMinNum
	}
	return 0
}

func (x *ServiceUnitRuleStrategyConfig) GetFallbackStrategy() *ServiceUnitStrategyConfig {
	if x != nil {
		return x.FallbackStrategy
	}
	return nil
}

func (x *ServiceUnitRuleStrategyConfig) GetVariableMissStrategy() *ServiceUnitStrategyConfig {
	if x != nil {
		return x.VariableMissStrategy
	}
	return nil
}

func (x *ServiceUnitRuleStrategyConfig) GetEscapeTrafficStrategy() *ServiceUnitStrategyConfig {
	if x != nil {
		return x.EscapeTrafficStrategy
	}
	return nil
}

func (x *ServiceUnitRuleStrategyConfig) GetTracingStrategy() *ServiceUnitStrategyConfig {
	if x != nil {
		return x.TracingStrategy
	}
	return nil
}

// 微服务单元化规则详细配置
type ServiceUnitRuleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ServiceUnitType ServiceUnitType                `protobuf:"varint,2,opt,name=serviceUnitType,proto3,enum=v1.ServiceUnitType" json:"serviceUnitType,omitempty"`
	Config          *ServiceUnitRuleStrategyConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// 单元变量
	Variable *UnitVariable `protobuf:"bytes,4,opt,name=variable,proto3" json:"variable,omitempty"`
	// 是否开启写保护
	WriteProtect bool  `protobuf:"varint,5,opt,name=writeProtect,proto3" json:"writeProtect,omitempty"`
	Enable       bool  `protobuf:"varint,6,opt,name=enable,proto3" json:"enable,omitempty"`
	CreateTime   int64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime   int64 `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *ServiceUnitRuleConfig) Reset() {
	*x = ServiceUnitRuleConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceUnitRuleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceUnitRuleConfig) ProtoMessage() {}

func (x *ServiceUnitRuleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceUnitRuleConfig.ProtoReflect.Descriptor instead.
func (*ServiceUnitRuleConfig) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceUnitRuleConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceUnitRuleConfig) GetServiceUnitType() ServiceUnitType {
	if x != nil {
		return x.ServiceUnitType
	}
	return ServiceUnitType_UNIT_UNKNOWN
}

func (x *ServiceUnitRuleConfig) GetConfig() *ServiceUnitRuleStrategyConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ServiceUnitRuleConfig) GetVariable() *UnitVariable {
	if x != nil {
		return x.Variable
	}
	return nil
}

func (x *ServiceUnitRuleConfig) GetWriteProtect() bool {
	if x != nil {
		return x.WriteProtect
	}
	return false
}

func (x *ServiceUnitRuleConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ServiceUnitRuleConfig) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ServiceUnitRuleConfig) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 微服务单元化规则总配置
type ServiceUnitRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultConfig *ServiceUnitRuleConfig            `protobuf:"bytes,1,opt,name=defaultConfig,proto3" json:"defaultConfig,omitempty"`
	Sub           map[string]*ServiceUnitRuleConfig `protobuf:"bytes,2,rep,name=sub,proto3" json:"sub,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Version       string                            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	CreateTime    int64                             `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    int64                             `protobuf:"varint,5,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *ServiceUnitRule) Reset() {
	*x = ServiceUnitRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceUnitRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceUnitRule) ProtoMessage() {}

func (x *ServiceUnitRule) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceUnitRule.ProtoReflect.Descriptor instead.
func (*ServiceUnitRule) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceUnitRule) GetDefaultConfig() *ServiceUnitRuleConfig {
	if x != nil {
		return x.DefaultConfig
	}
	return nil
}

func (x *ServiceUnitRule) GetSub() map[string]*ServiceUnitRuleConfig {
	if x != nil {
		return x.Sub
	}
	return nil
}

func (x *ServiceUnitRule) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceUnitRule) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ServiceUnitRule) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

// 地域
type Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Region) Reset() {
	*x = Region{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Region) ProtoMessage() {}

func (x *Region) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Region.ProtoReflect.Descriptor instead.
func (*Region) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{4}
}

func (x *Region) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Region) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 可用区
type Zone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Zone) Reset() {
	*x = Zone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Zone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zone) ProtoMessage() {}

func (x *Zone) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zone.ProtoReflect.Descriptor instead.
func (*Zone) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{5}
}

func (x *Zone) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Zone) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 单元范围
type UnitRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  int32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To    int32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Ratio int32 `protobuf:"varint,3,opt,name=ratio,proto3" json:"ratio,omitempty"`
}

func (x *UnitRange) Reset() {
	*x = UnitRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitRange) ProtoMessage() {}

func (x *UnitRange) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitRange.ProtoReflect.Descriptor instead.
func (*UnitRange) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{6}
}

func (x *UnitRange) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *UnitRange) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *UnitRange) GetRatio() int32 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

// 单元
type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// `center` or `unit`
	Type       string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Region     *Region `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	Zones      []*Zone `protobuf:"bytes,5,rep,name=zones,proto3" json:"zones,omitempty"`
	AccessMode string  `protobuf:"bytes,6,opt,name=accessMode,proto3" json:"accessMode,omitempty"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{7}
}

func (x *Unit) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Unit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Unit) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Unit) GetRegion() *Region {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *Unit) GetZones() []*Zone {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *Unit) GetAccessMode() string {
	if x != nil {
		return x.AccessMode
	}
	return ""
}

// 单元规则配置
type UnitRuleConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Whitelist []string     `protobuf:"bytes,2,rep,name=whitelist,proto3" json:"whitelist,omitempty"`
	Prefix    []string     `protobuf:"bytes,3,rep,name=prefix,proto3" json:"prefix,omitempty"`
	Range     []*UnitRange `protobuf:"bytes,4,rep,name=range,proto3" json:"range,omitempty"`
}

func (x *UnitRuleConfig) Reset() {
	*x = UnitRuleConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitRuleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitRuleConfig) ProtoMessage() {}

func (x *UnitRuleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitRuleConfig.ProtoReflect.Descriptor instead.
func (*UnitRuleConfig) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{8}
}

func (x *UnitRuleConfig) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UnitRuleConfig) GetWhitelist() []string {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

func (x *UnitRuleConfig) GetPrefix() []string {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *UnitRuleConfig) GetRange() []*UnitRange {
	if x != nil {
		return x.Range
	}
	return nil
}

// 单元变量获取方式
type UnitVariableGetter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ValueType    string `protobuf:"bytes,2,opt,name=valueType,proto3" json:"valueType,omitempty"`
	VariableName string `protobuf:"bytes,3,opt,name=variableName,proto3" json:"variableName,omitempty"`
	Function     string `protobuf:"bytes,4,opt,name=function,proto3" json:"function,omitempty"`
	Header       string `protobuf:"bytes,5,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *UnitVariableGetter) Reset() {
	*x = UnitVariableGetter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitVariableGetter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitVariableGetter) ProtoMessage() {}

func (x *UnitVariableGetter) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitVariableGetter.ProtoReflect.Descriptor instead.
func (*UnitVariableGetter) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{9}
}

func (x *UnitVariableGetter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnitVariableGetter) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *UnitVariableGetter) GetVariableName() string {
	if x != nil {
		return x.VariableName
	}
	return ""
}

func (x *UnitVariableGetter) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *UnitVariableGetter) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

// 单元变量
type UnitVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Function string `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	Modulo   int32  `protobuf:"varint,3,opt,name=modulo,proto3" json:"modulo,omitempty"`
	// 微服务控制台配置项
	DefaultGetter   string                         `protobuf:"bytes,4,opt,name=defaultGetter,proto3" json:"defaultGetter,omitempty"`
	GetValueMethods []*UnitVariableGetter          `protobuf:"bytes,5,rep,name=getValueMethods,proto3" json:"getValueMethods,omitempty"`
	ValueMethodMap  map[string]*UnitVariableGetter `protobuf:"bytes,6,rep,name=valueMethodMap,proto3" json:"valueMethodMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UnitVariable) Reset() {
	*x = UnitVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitVariable) ProtoMessage() {}

func (x *UnitVariable) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitVariable.ProtoReflect.Descriptor instead.
func (*UnitVariable) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{10}
}

func (x *UnitVariable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnitVariable) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *UnitVariable) GetModulo() int32 {
	if x != nil {
		return x.Modulo
	}
	return 0
}

func (x *UnitVariable) GetDefaultGetter() string {
	if x != nil {
		return x.DefaultGetter
	}
	return ""
}

func (x *UnitVariable) GetGetValueMethods() []*UnitVariableGetter {
	if x != nil {
		return x.GetValueMethods
	}
	return nil
}

func (x *UnitVariable) GetValueMethodMap() map[string]*UnitVariableGetter {
	if x != nil {
		return x.ValueMethodMap
	}
	return nil
}

// 单元规则
type UnitRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Biz            string `protobuf:"bytes,3,opt,name=biz,proto3" json:"biz,omitempty"`
	DefaultRule    bool   `protobuf:"varint,4,opt,name=defaultRule,proto3" json:"defaultRule,omitempty"`
	Variable       string `protobuf:"bytes,5,opt,name=variable,proto3" json:"variable,omitempty"`
	GetValueMethod string `protobuf:"bytes,6,opt,name=getValueMethod,proto3" json:"getValueMethod,omitempty"`
	// 无单元变量操作 1:拒绝；2:路由到中心单元
	NonUnitVariable int32             `protobuf:"varint,7,opt,name=nonUnitVariable,proto3" json:"nonUnitVariable,omitempty"`
	Units           []*UnitRuleConfig `protobuf:"bytes,8,rep,name=units,proto3" json:"units,omitempty"`
}

func (x *UnitRule) Reset() {
	*x = UnitRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitRule) ProtoMessage() {}

func (x *UnitRule) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitRule.ProtoReflect.Descriptor instead.
func (*UnitRule) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{11}
}

func (x *UnitRule) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UnitRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnitRule) GetBiz() string {
	if x != nil {
		return x.Biz
	}
	return ""
}

func (x *UnitRule) GetDefaultRule() bool {
	if x != nil {
		return x.DefaultRule
	}
	return false
}

func (x *UnitRule) GetVariable() string {
	if x != nil {
		return x.Variable
	}
	return ""
}

func (x *UnitRule) GetGetValueMethod() string {
	if x != nil {
		return x.GetValueMethod
	}
	return ""
}

func (x *UnitRule) GetNonUnitVariable() int32 {
	if x != nil {
		return x.NonUnitVariable
	}
	return 0
}

func (x *UnitRule) GetUnits() []*UnitRuleConfig {
	if x != nil {
		return x.Units
	}
	return nil
}

// 单元空间
type UnitSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           string          `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name           string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WorkspaceId    int32           `protobuf:"varint,3,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	Version        string          `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	TenantId       string          `protobuf:"bytes,5,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	MultiLiveType  string          `protobuf:"bytes,6,opt,name=multiLiveType,proto3" json:"multiLiveType,omitempty"`
	Architecture   string          `protobuf:"bytes,7,opt,name=architecture,proto3" json:"architecture,omitempty"`
	CorrectionType string          `protobuf:"bytes,8,opt,name=correctionType,proto3" json:"correctionType,omitempty"`
	UnitVariables  []*UnitVariable `protobuf:"bytes,9,rep,name=unitVariables,proto3" json:"unitVariables,omitempty"`
	Units          []*Unit         `protobuf:"bytes,10,rep,name=units,proto3" json:"units,omitempty"`
	UnitRules      []*UnitRule     `protobuf:"bytes,11,rep,name=unitRules,proto3" json:"unitRules,omitempty"`
}

func (x *UnitSpec) Reset() {
	*x = UnitSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitSpec) ProtoMessage() {}

func (x *UnitSpec) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitSpec.ProtoReflect.Descriptor instead.
func (*UnitSpec) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{12}
}

func (x *UnitSpec) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UnitSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UnitSpec) GetWorkspaceId() int32 {
	if x != nil {
		return x.WorkspaceId
	}
	return 0
}

func (x *UnitSpec) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UnitSpec) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UnitSpec) GetMultiLiveType() string {
	if x != nil {
		return x.MultiLiveType
	}
	return ""
}

func (x *UnitSpec) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *UnitSpec) GetCorrectionType() string {
	if x != nil {
		return x.CorrectionType
	}
	return ""
}

func (x *UnitSpec) GetUnitVariables() []*UnitVariable {
	if x != nil {
		return x.UnitVariables
	}
	return nil
}

func (x *UnitSpec) GetUnits() []*Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *UnitSpec) GetUnitRules() []*UnitRule {
	if x != nil {
		return x.UnitRules
	}
	return nil
}

type MultiLiveConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiVersion string    `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Kind       string    `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Spec       *UnitSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *MultiLiveConfig) Reset() {
	*x = MultiLiveConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiLiveConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiLiveConfig) ProtoMessage() {}

func (x *MultiLiveConfig) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiLiveConfig.ProtoReflect.Descriptor instead.
func (*MultiLiveConfig) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{13}
}

func (x *MultiLiveConfig) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *MultiLiveConfig) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *MultiLiveConfig) GetSpec() *UnitSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UnitConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultiConfig *MultiLiveConfig `protobuf:"bytes,1,opt,name=multi_config,proto3" json:"multi_config,omitempty"`
	ServiceRule *ServiceUnitRule `protobuf:"bytes,2,opt,name=service_rule,proto3" json:"service_rule,omitempty"`
}

func (x *UnitConfig) Reset() {
	*x = UnitConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_domain_unit_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitConfig) ProtoMessage() {}

func (x *UnitConfig) ProtoReflect() protoreflect.Message {
	mi := &file_domain_unit_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitConfig.ProtoReflect.Descriptor instead.
func (*UnitConfig) Descriptor() ([]byte, []int) {
	return file_domain_unit_proto_rawDescGZIP(), []int{14}
}

func (x *UnitConfig) GetMultiConfig() *MultiLiveConfig {
	if x != nil {
		return x.MultiConfig
	}
	return nil
}

func (x *UnitConfig) GetServiceRule() *ServiceUnitRule {
	if x != nil {
		return x.ServiceRule
	}
	return nil
}

var File_domain_unit_proto protoreflect.FileDescriptor

var file_domain_unit_proto_rawDesc = []byte{
	0x0a, 0x11, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0x2f, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x83, 0x03, 0x0a, 0x1d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x49, 0x0a, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x66, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x51, 0x0a,
	0x14, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x14, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x12, 0x53, 0x0a, 0x15, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x15,
	0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x47, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0xcb,
	0x02, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2c, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xaf, 0x02, 0x0a,
	0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2e, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x73, 0x75,
	0x62, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x51, 0x0a, 0x08, 0x53,
	0x75, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c,
	0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x04,
	0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x22,
	0xa6, 0x01, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x7f, 0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x55, 0x6e,
	0x69, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xe7, 0x02, 0x0a, 0x0c, 0x55,
	0x6e, 0x69, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x47, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0f, 0x67, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x67, 0x65, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x4c, 0x0a, 0x0e, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x61, 0x70, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x61, 0x70, 0x1a, 0x59, 0x0a, 0x13, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xfa, 0x01, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x7a, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x7a, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x6e, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x22, 0x80, 0x03, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x69, 0x76, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x36, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x69,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x7e, 0x0a,
	0x0a, 0x55, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x0c, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x69, 0x76, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2a, 0x55, 0x0a,
	0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f,
	0x4e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x10, 0x03, 0x2a, 0x2f, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x52, 0x65, 0x61, 0x64, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x10, 0x02, 0x42, 0x23, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x64, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6a, 0x6d, 0x73, 0x66, 0x2e, 0x70, 0x62, 0x2e, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x50, 0x01, 0x5a, 0x03, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_domain_unit_proto_rawDescOnce sync.Once
	file_domain_unit_proto_rawDescData = file_domain_unit_proto_rawDesc
)

func file_domain_unit_proto_rawDescGZIP() []byte {
	file_domain_unit_proto_rawDescOnce.Do(func() {
		file_domain_unit_proto_rawDescData = protoimpl.X.CompressGZIP(file_domain_unit_proto_rawDescData)
	})
	return file_domain_unit_proto_rawDescData
}

var file_domain_unit_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_domain_unit_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_domain_unit_proto_goTypes = []interface{}{
	(ServiceUnitType)(0),                  // 0: v1.ServiceUnitType
	(AccessMode)(0),                       // 1: v1.AccessMode
	(*ServiceUnitStrategyConfig)(nil),     // 2: v1.ServiceUnitStrategyConfig
	(*ServiceUnitRuleStrategyConfig)(nil), // 3: v1.ServiceUnitRuleStrategyConfig
	(*ServiceUnitRuleConfig)(nil),         // 4: v1.ServiceUnitRuleConfig
	(*ServiceUnitRule)(nil),               // 5: v1.ServiceUnitRule
	(*Region)(nil),                        // 6: v1.Region
	(*Zone)(nil),                          // 7: v1.Zone
	(*UnitRange)(nil),                     // 8: v1.UnitRange
	(*Unit)(nil),                          // 9: v1.Unit
	(*UnitRuleConfig)(nil),                // 10: v1.UnitRuleConfig
	(*UnitVariableGetter)(nil),            // 11: v1.UnitVariableGetter
	(*UnitVariable)(nil),                  // 12: v1.UnitVariable
	(*UnitRule)(nil),                      // 13: v1.UnitRule
	(*UnitSpec)(nil),                      // 14: v1.UnitSpec
	(*MultiLiveConfig)(nil),               // 15: v1.MultiLiveConfig
	(*UnitConfig)(nil),                    // 16: v1.UnitConfig
	nil,                                   // 17: v1.ServiceUnitRule.SubEntry
	nil,                                   // 18: v1.UnitVariable.ValueMethodMapEntry
}
var file_domain_unit_proto_depIdxs = []int32{
	2,  // 0: v1.ServiceUnitRuleStrategyConfig.fallbackStrategy:type_name -> v1.ServiceUnitStrategyConfig
	2,  // 1: v1.ServiceUnitRuleStrategyConfig.variableMissStrategy:type_name -> v1.ServiceUnitStrategyConfig
	2,  // 2: v1.ServiceUnitRuleStrategyConfig.escapeTrafficStrategy:type_name -> v1.ServiceUnitStrategyConfig
	2,  // 3: v1.ServiceUnitRuleStrategyConfig.tracingStrategy:type_name -> v1.ServiceUnitStrategyConfig
	0,  // 4: v1.ServiceUnitRuleConfig.serviceUnitType:type_name -> v1.ServiceUnitType
	3,  // 5: v1.ServiceUnitRuleConfig.config:type_name -> v1.ServiceUnitRuleStrategyConfig
	12, // 6: v1.ServiceUnitRuleConfig.variable:type_name -> v1.UnitVariable
	4,  // 7: v1.ServiceUnitRule.defaultConfig:type_name -> v1.ServiceUnitRuleConfig
	17, // 8: v1.ServiceUnitRule.sub:type_name -> v1.ServiceUnitRule.SubEntry
	6,  // 9: v1.Unit.region:type_name -> v1.Region
	7,  // 10: v1.Unit.zones:type_name -> v1.Zone
	8,  // 11: v1.UnitRuleConfig.range:type_name -> v1.UnitRange
	11, // 12: v1.UnitVariable.getValueMethods:type_name -> v1.UnitVariableGetter
	18, // 13: v1.UnitVariable.valueMethodMap:type_name -> v1.UnitVariable.ValueMethodMapEntry
	10, // 14: v1.UnitRule.units:type_name -> v1.UnitRuleConfig
	12, // 15: v1.UnitSpec.unitVariables:type_name -> v1.UnitVariable
	9,  // 16: v1.UnitSpec.units:type_name -> v1.Unit
	13, // 17: v1.UnitSpec.unitRules:type_name -> v1.UnitRule
	14, // 18: v1.MultiLiveConfig.spec:type_name -> v1.UnitSpec
	15, // 19: v1.UnitConfig.multi_config:type_name -> v1.MultiLiveConfig
	5,  // 20: v1.UnitConfig.service_rule:type_name -> v1.ServiceUnitRule
	4,  // 21: v1.ServiceUnitRule.SubEntry.value:type_name -> v1.ServiceUnitRuleConfig
	11, // 22: v1.UnitVariable.ValueMethodMapEntry.value:type_name -> v1.UnitVariableGetter
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_domain_unit_proto_init() }
func file_domain_unit_proto_init() {
	if File_domain_unit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_domain_unit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceUnitStrategyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceUnitRuleStrategyConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceUnitRuleConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceUnitRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Region); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Zone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitRuleConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitVariableGetter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiLiveConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_domain_unit_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_domain_unit_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_domain_unit_proto_goTypes,
		DependencyIndexes: file_domain_unit_proto_depIdxs,
		EnumInfos:         file_domain_unit_proto_enumTypes,
		MessageInfos:      file_domain_unit_proto_msgTypes,
	}.Build()
	File_domain_unit_proto = out.File
	file_domain_unit_proto_rawDesc = nil
	file_domain_unit_proto_goTypes = nil
	file_domain_unit_proto_depIdxs = nil
}
